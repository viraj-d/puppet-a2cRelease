/*
Deployment script for A2CDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar UserName "A2CUser"
:setvar DatabaseName "A2CDB"
:setvar DefaultFilePrefix "A2CDB"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF (SELECT is_default
    FROM   [$(DatabaseName)].[sys].[filegroups]
    WHERE  [name] = N'FileStream') = 0
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            MODIFY FILEGROUP [FileStream] DEFAULT;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
PRINT N'Altering [dbo].[usp_UpdateSchoolUser]...';


GO

ALTER procedure [dbo].[usp_UpdateSchoolUser]
@SchoolId			int = 0,
@UserId				uniqueidentifier,
@UserName			nvarchar(512),
@Email				nvarchar(512),
@RoleId ListInt		readonly,
@Forename			nvarchar(255),
@SurName			nvarchar(255),
@PasswordHash		nvarchar(256) = null
As
Begin
	
	Update	[dbo].[Users]
	Set		[ForeName] = @Forename,
			[SurName] = @SurName
	Where	[UserId] = @UserId AND (([SchoolId] = @SchoolId and @SchoolId>0) or (([SchoolId] is null OR [SchoolId]<=0)and @SchoolId<=0))

	Delete from [dbo].[UsersInRoles] where UserId = @UserId

	Insert into UsersInRoles(RoleId, UserId)
	Select	r.ID, @UserId
	From	@RoleId r

	if @PasswordHash is null
	Begin
		UPDATE [dbo].[aspnet_Membership]
		SET		[Email]            = @Email,
				[LoweredEmail]     = LOWER(@Email),
				IsLockedOut = 0,
				FailedPasswordAttemptCount = 0,
				FailedPasswordAttemptWindowStart = CONVERT( datetime, '17540101', 112 ),
				FailedPasswordAnswerAttemptCount = 0,
				FailedPasswordAnswerAttemptWindowStart = CONVERT( datetime, '17540101', 112 ),
				LastLockoutDate = CONVERT( datetime, '17540101', 112 )
		WHERE  @UserId = [UserId];
	end
	Else
	Begin
		UPDATE [dbo].[aspnet_Membership]
		SET		[Email]            = @Email,
				[LoweredEmail]     = LOWER(@Email),
				IsLockedOut = 0,
				FailedPasswordAttemptCount = 0,
				FailedPasswordAttemptWindowStart = CONVERT( datetime, '17540101', 112 ),
				FailedPasswordAnswerAttemptCount = 0,
				FailedPasswordAnswerAttemptWindowStart = CONVERT( datetime, '17540101', 112 ),
				LastLockoutDate = CONVERT( datetime, '17540101', 112 ),
				[Password] = @PasswordHash,
				LastPasswordChangedDate=GETUTCDATE()
		WHERE  @UserId = [UserId];

		UPDATE	Users
			SET		IsFirstTimeLogin = 1
		WHERE  @UserId = [UserId];
	End


	UPDATE  [dbo].[aspnet_Users]
    SET     UserName = @UserName,
			LoweredUserName = LOWER(@UserName)
    WHERE   @UserId = UserId
	
End
GO
PRINT N'Altering [Version]...';


GO
EXECUTE sp_updateextendedproperty @name = N'Version', @value = N'15.1.11.3';


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

Update A2CTransactionResponseEnvelopeMessages
Set ImportPriority = 999999
Where ImportPriority = 9999
GO

GO
PRINT N'Update complete.';


GO
