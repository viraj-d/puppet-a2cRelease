/*
Deployment script for A2CDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar UserName "A2CUser"
:setvar DatabaseName "A2CDB"
:setvar DefaultFilePrefix "A2CDB"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF (SELECT is_default
    FROM   [$(DatabaseName)].[sys].[filegroups]
    WHERE  [name] = N'FileStream') = 0
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            MODIFY FILEGROUP [FileStream] DEFAULT;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

GO

GO
PRINT N'Altering [dbo].[usp_GetProductCataloguePathwayChildNodes]...';


GO

ALTER  PROCEDURE [dbo].[usp_GetProductCataloguePathwayChildNodes]
@AwardingOrganisationCentreId int,
@QualificationElementId int

As
Begin

	SET NOCOUNT ON;

	SELECT 
		QEC.QualificationElementId,  
		QEC.AO_Qualification_Element_Id AS AOQEID,
		QEC.Qualification_Element_Title AS QEShortTitle, 
		QEC.Qualification_Element_Type AS QualificationElementType,
		(SELECT COUNT(1) FROM QERelationship WHERE QualificationElementId_Parent = QEC.QualificationElementId) AS ChildrenCount,
		P.Maximum_Unit_Selection AS MaximumUnitSelection,
		P.Minimum_Unit_Selection AS MinimumUnitSelection,
		P.Maximum_Pathway_Selection AS MaximumPathwaySelection,
		p.Minimum_Pathway_Selection AS MinimumPathwaySelection
	FROM QERelationship QER
		INNER JOIN QualificationElement QEC ON QER.QualificationElementId_Child = QEC.QualificationElementId 
		LEFT OUTER JOIN Pathway P ON QEC.QualificationElementId = P.QualificationElementId
	WHERE QER.QE_Relationship_Type = 'Allowed' AND 
	QER.AwardingOrganisationCentreId = @AwardingOrganisationCentreId AND QER.QualificationElementId_Parent = @QualificationElementId
End
GO
PRINT N'Altering [dbo].[usp_GetProductCataloguePathwayRootNode]...';


GO


ALTER  PROCEDURE [dbo].[usp_GetProductCataloguePathwayRootNode]
@AwardingOrganisationCentreId int,
@QualificationElementId int

As
Begin

	SET NOCOUNT ON;

	SELECT 
		QEC.QualificationElementId,  
		QEC.AO_Qualification_Element_Id AS AOQEID,
		QEC.Qualification_Element_Title AS QEShortTitle, 
		QEC.Qualification_Element_Type AS QualificationElementType,
		(SELECT COUNT(1) FROM QERelationship WHERE QualificationElementId_Parent = QEC.QualificationElementId) AS ChildrenCount,
		P.Maximum_Unit_Selection AS MaximumUnitSelection,
		P.Minimum_Unit_Selection AS MinimumUnitSelection,
		P.Maximum_Pathway_Selection AS MaximumPathwaySelection,
		p.Minimum_Pathway_Selection AS MinimumPathwaySelection
	FROM  QualificationElement QEC 
		LEFT OUTER JOIN Pathway P ON QEC.QualificationElementId = P.QualificationElementId
	WHERE QEC.AwardingOrganisationCentreId = @AwardingOrganisationCentreId AND QEC.QualificationElementId = @QualificationElementId
	
End
GO
PRINT N'Altering [dbo].[usp_GetQualificationElementAssessmentMaterial]...';


GO


ALTER PROCEDURE [dbo].[usp_GetQualificationElementAssessmentMaterial]
	@TotalCount int = 0 OUTPUT,
	@OrderBy nvarchar(255) = 'MaterialId',
	@GridWhereClause nvarchar(max) = null,
	@PageNumber int = 1,
	@PageSize int = 10,
	@AwardingOrganisationCentreId int,
	@QEParentId int,
	@QEAvailabilityId int
As
Begin

	SET NOCOUNT ON;

	SET @TotalCount = 0;

	Declare @Skip int = (@PageNumber * @PageSize) - (@PageSize-1), @Take int = (@PageNumber * @PageSize),

	@WhereClause nvarchar(max) = ' q1.AwardingOrganisationCentreId=  ' + cast(@AwardingOrganisationCentreId as nvarchar(10)) +
								 ' and q1.QualificationElementId=' + cast(@QEParentId as nvarchar(10)) +
								 ' and q1.QEEffectiveStartDate= (select QEA_Effective_Start_Date_Time from QEavailability QE where QE.QEAvailabilityId=' + cast(@QEParentId as nvarchar(10)) +') '+
								 case when @GridWhereClause is null or len(ltrim(rtrim(@GridWhereClause))) <= 0 then ''
								 else ' and ' + @GridWhereClause end

	declare @CountQuery as nvarchar(max) = N'select @TotalCountOut=count(1)
						from
							( Select 
								AM.AwardingOrganisationCentreId as AwardingOrganisationCentreId,QE.QualificationElementId as QualificationElementId,
								AM.QE_Assmnt_Material_Id as MaterialId, AM.QE_Assmnt_Material_Name as MaterialName,
								AM.QE_Assmnt_Material_Source as Source, AM.QE_Assmnt_Material_Description as MaterialDescription,
								AM.QE_Assmnt_Material_Source_Type as SourceType,AM.QE_Assmnt_Material_Medium_Type as MediumType,
								QEAM.Number_Per_Learner as NumberPerLearner, QEAM.Number_Per_Centre as NumberPerCentre,
								QEAM.Assmnt_Material_Release_Date as ReleaseDate,QEAM.QEA_Effective_Start_Date_Time as QEEffectiveStartDate	 
							from 
								dbo.QEAssessmentMaterial AM
								Inner join QEAAssessmentMaterial QEAM 
									on (QEAM.AwardingOrganisationCentreId=AM.AwardingOrganisationCentreId and QEAM.QEAssessmentMaterialId=AM.QEAssessmentMaterialId)
								Inner join QualificationElement QE 
									on (QE.AwardingOrganisationCentreId=QEAM.AwardingOrganisationCentreId and QE.QualificationElementId=QEAM.QualificationElementId)
							where 
								AM.Record_Delete_Flag=0	
								and QEAM.Record_Delete_Flag=0	
								and QE.Record_Delete_Flag=0
							) q1
						where ' + @WhereClause,							

	@ListQuery as nvarchar(max) =	N'select * 
										from
										(select  *,Row_NUMBER() OVER (ORDER BY ' + @OrderBy + ' ) AS RowNumber from
											(Select 
												AM.AwardingOrganisationCentreId as AwardingOrganisationCentreId,QE.QualificationElementId as QualificationElementId,
												AM.QE_Assmnt_Material_Id as MaterialId, AM.QE_Assmnt_Material_Name as MaterialName,
												AM.QE_Assmnt_Material_Source as Source, AM.QE_Assmnt_Material_Description as MaterialDescription,
												AM.QE_Assmnt_Material_Source_Type as SourceType,AM.QE_Assmnt_Material_Medium_Type as MediumType,
												QEAM.Number_Per_Learner as NumberPerLearner, QEAM.Number_Per_Centre as NumberPerCentre,
												QEAM.Assmnt_Material_Release_Date as ReleaseDate,QEAM.QEA_Effective_Start_Date_Time as QEEffectiveStartDate	 
											from 
												dbo.QEAssessmentMaterial AM
												Inner join QEAAssessmentMaterial QEAM 
													on (QEAM.AwardingOrganisationCentreId=AM.AwardingOrganisationCentreId and QEAM.QEAssessmentMaterialId=AM.QEAssessmentMaterialId)
												Inner join QualificationElement QE 
													on (QE.AwardingOrganisationCentreId=QEAM.AwardingOrganisationCentreId and QE.QualificationElementId=QEAM.QualificationElementId)
											where 
												AM.Record_Delete_Flag=0	
												and QEAM.Record_Delete_Flag=0	
												and QE.Record_Delete_Flag=0	
											) q1
										where ' + @WhereClause + ') q2 
									WHERE q2.RowNumber BETWEEN @Skip AND @Take'
										
	EXECUTE sp_executesql @CountQuery, N'@TotalCountOut int OUTPUT', @TotalCountOut = @TotalCount OUTPUT

	EXECUTE sp_executesql @ListQuery, N'@Skip int, @Take int', @Skip = @Skip, @Take = @Take
	
End
GO
PRINT N'Altering [dbo].[usp_SelectQEAdditionalDataKeyEventFeeList]...';


GO


---usp_SelectQEAdditionalDataKeyEventList 1971,1001,1, '[QEAEffectiveStartDateTime] desc','',1,20,11
ALTER PROCEDURE [dbo].[usp_SelectQEAdditionalDataKeyEventFeeList]
@QualificationElementId int,
@AwardingOrganisationCentreId int,
@TotalCount int = 0 OUTPUT,
@OrderBy nvarchar(255) = '[FeePeriodStartDateTime] asc',
@GridWhereClause nvarchar(max) = null,
@PageNumber int = 1,
@PageSize int = 20,
@AvailabilityId int
AS
BEGIN

SET NOCOUNT ON;


SET @TotalCount = 0;
Declare @Skip int = (@PageNumber * @PageSize) - (@PageSize-1),
@Take int = (@PageNumber * @PageSize),
@WhereClause nvarchar(max) = '[AwardingOrganisationCentreId] = ' + cast(@AwardingOrganisationCentreId as nvarchar(10)) +
								' and [QualificationElementId] = ' + cast(@QualificationElementId as nvarchar(10))  +
								' and [QEAvailabilityId] = ' + cast(@AvailabilityId as nvarchar(10))  +
								' and Record_Delete_Flag=0 and Event_Record_Delete_Flag=0 and EventFee_Record_Delete_Flag=0'+
							case when @GridWhereClause is null or len(ltrim(rtrim(@GridWhereClause))) <= 0 then ''
							else ' and ' + @GridWhereClause end


SET @TotalCount = 0;
	declare @CountQuery as nvarchar(max) = N'Select @TotalCountOut = Count(1) from
	(select qe.QEAvailabilityId, qe.AwardingOrganisationCentreId,qe.QualificationElementId,qeEvent.Key_Event_Name as  KeyEventName, 
	qeEventFee.QE_Fee_Category_Type as QEFeeCategoryType,qeEventFee.Fee_Period_Title as FeePeriodTitle,qeEventFee.Fee_Period_Start_Date_Time as FeePeriodStartDateTime
	,qeEventFee.Fee_Period_End_Date_Time as FeePeriodEndDateTime,qeEventFee.Fee_Amount as FeeAmount,qeEventFee.Fee_Additional_Text as FeeAdditionalText	
	,qe.Record_Delete_Flag,qeEvent.Record_Delete_Flag as Event_Record_Delete_Flag,qeEventFee.Record_Delete_Flag as EventFee_Record_Delete_Flag
	from QEAvailability qe
	inner join QEAvailabilityKeyEvent qeEvent on qe.QEAvailabilityId=qeEvent.QEAvailabilityId
	and qe.AwardingOrganisationCentreId=qeEvent.AwardingOrganisationCentreId
	inner join QEAvailabilityKeyEventFee qeEventFee on qeEventFee.AwardingOrganisationCentreId=qeEvent.AwardingOrganisationCentreId
	and qeEventFee.QEAvailabilityKeyEventId = qeEvent.QEAvailabilityKeyEventId) p
		 Where ' + @WhereClause
	 
	

	 Declare @ListQuery as nvarchar(max)
	

	Set @ListQuery=
	'Select QEAvailabilityId,AwardingOrganisationCentreId,QualificationElementId,KeyEventName, 
			QEFeeCategoryType,FeePeriodTitle,FeePeriodStartDateTime
			,FeePeriodEndDateTime,FeeAmount,FeeAdditionalText	
			,Record_Delete_Flag,Event_Record_Delete_Flag,EventFee_Record_Delete_Flag,RN
	 from (Select QEAvailabilityId,AwardingOrganisationCentreId,QualificationElementId,KeyEventName, 
			QEFeeCategoryType,FeePeriodTitle,FeePeriodStartDateTime
			,FeePeriodEndDateTime,FeeAmount,FeeAdditionalText	
			,Record_Delete_Flag,Event_Record_Delete_Flag,EventFee_Record_Delete_Flag,
		 ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') AS RN
	 from 
		(select qe.QEAvailabilityId,qe.AwardingOrganisationCentreId,qe.QualificationElementId,qeEvent.Key_Event_Name as  KeyEventName 
		,qeEventFee.QE_Fee_Category_Type as QEFeeCategoryType,qeEventFee.Fee_Period_Title as FeePeriodTitle,qeEventFee.Fee_Period_Start_Date_Time as FeePeriodStartDateTime
		,qeEventFee.Fee_Period_End_Date_Time as FeePeriodEndDateTime,qeEventFee.Fee_Amount as FeeAmount,qeEventFee.Fee_Additional_Text as FeeAdditionalText	
		,qe.Record_Delete_Flag,qeEvent.Record_Delete_Flag as Event_Record_Delete_Flag,qeEventFee.Record_Delete_Flag as EventFee_Record_Delete_Flag
		from QEAvailability qe
		inner join QEAvailabilityKeyEvent qeEvent on qe.QEAvailabilityId=qeEvent.QEAvailabilityId
		and qe.AwardingOrganisationCentreId=qeEvent.AwardingOrganisationCentreId
		inner join QEAvailabilityKeyEventFee qeEventFee on qeEventFee.AwardingOrganisationCentreId=qeEvent.AwardingOrganisationCentreId
		and qeEventFee.QEAvailabilityKeyEventId = qeEvent.QEAvailabilityKeyEventId
		) p
		Where ' + @WhereClause
	 + ') p2 where p2.[RN] BETWEEN @Skip AND @Take'
	 print @CountQuery
	print @ListQuery
	
	EXECUTE sp_executesql	@CountQuery, 
							N'@TotalCountOut int OUTPUT', 
							@TotalCountOut = @TotalCount OUTPUT
	EXECUTE sp_executesql @ListQuery, N'@Skip int, @Take int', @Skip = @Skip, @Take = @Take
	print @TotalCount

END
GO
PRINT N'Altering [dbo].[usp_SelectQEAdditionalDataKeyEventList]...';


GO




---usp_SelectQEAdditionalDataKeyEventList 1971,1001,1, '[QEAEffectiveStartDateTime] desc','',1,20
--usp_SelectQEAdditionalDataKeyEventList 1968,1001,1, '[QEAEffectiveStartDateTime] desc','',1,20
ALTER PROCEDURE [dbo].[usp_SelectQEAdditionalDataKeyEventList]
@QualificationElementId int,
@AwardingOrganisationCentreId int,
@TotalCount int = 0 OUTPUT,
@OrderBy nvarchar(255) = '[KeyEventStartDateTime] asc',
@GridWhereClause nvarchar(max) = null,
@PageNumber int = 1,
@PageSize int = 20,
@AvailabilityId int
AS
BEGIN

SET NOCOUNT ON;


SET @TotalCount = 0;
Declare @Skip int = (@PageNumber * @PageSize) - (@PageSize-1),
@Take int = (@PageNumber * @PageSize),
@WhereClause nvarchar(max) = '[AwardingOrganisationCentreId] = ' + cast(@AwardingOrganisationCentreId as nvarchar(10)) +
								' and [QualificationElementId] = ' + cast(@QualificationElementId as nvarchar(10))  +
								' and [QEAvailabilityId] = ' + cast(@AvailabilityId as nvarchar(10))  +
								' and Record_Delete_Flag=0 and Event_Record_Delete_Flag=0'+
							case when @GridWhereClause is null or len(ltrim(rtrim(@GridWhereClause))) <= 0 then ''
							else ' and ' + @GridWhereClause end


SET @TotalCount = 0;
	declare @CountQuery as nvarchar(max) = N'Select @TotalCountOut = Count(1) from
	(select qe.QEAvailabilityId, qe.AwardingOrganisationCentreId,qe.QualificationElementId,qeEvent.Key_Event_Name as  KeyEventName,qeEvent.Key_Event_Start_Date_Time as KeyEventStartDateTime
	,qeEvent.Key_Event_End_Date_Time as KeyEventEndDateTime,qeEvent.Key_Event_Additional_Text as KeyEventAdditionalText,qeEvent.Time_Period_Type as TimePeriodType
	,qe.Record_Delete_Flag,qeEvent.Record_Delete_Flag as Event_Record_Delete_Flag
	from QEAvailability qe
	inner join QEAvailabilityKeyEvent qeEvent on qe.QEAvailabilityId=qeEvent.QEAvailabilityId
	and qe.AwardingOrganisationCentreId=qeEvent.AwardingOrganisationCentreId) p
		 Where ' + @WhereClause
	 
	

	 Declare @ListQuery as nvarchar(max)
	

	Set @ListQuery=
	'Select QEAvailabilityId, AwardingOrganisationCentreId,QualificationElementId,KeyEventName,KeyEventStartDateTime,
	 KeyEventEndDateTime,KeyEventAdditionalText,TimePeriodType,RN
	 from (Select QEAvailabilityId, AwardingOrganisationCentreId,QualificationElementId,
		 KeyEventName,KeyEventStartDateTime,KeyEventEndDateTime,KeyEventAdditionalText,
		 TimePeriodType,Record_Delete_Flag,Event_Record_Delete_Flag,
		 ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') AS RN
	 from 
		(select qe.QEAvailabilityId, qe.AwardingOrganisationCentreId,qe.QualificationElementId,qeEvent.Key_Event_Name as  KeyEventName,qeEvent.Key_Event_Start_Date_Time as KeyEventStartDateTime
		,qeEvent.Key_Event_End_Date_Time as KeyEventEndDateTime,qeEvent.Key_Event_Additional_Text as KeyEventAdditionalText,qeEvent.Time_Period_Type as TimePeriodType
		,qe.Record_Delete_Flag,qeEvent.Record_Delete_Flag as Event_Record_Delete_Flag
		from QEAvailability qe
		inner join QEAvailabilityKeyEvent qeEvent on qe.QEAvailabilityId=qeEvent.QEAvailabilityId
		and qe.AwardingOrganisationCentreId=qeEvent.AwardingOrganisationCentreId
		) p
		Where ' + @WhereClause
	 + ') p2 where p2.[RN] BETWEEN @Skip AND @Take'
	 print @CountQuery
	print @ListQuery
	
	EXECUTE sp_executesql	@CountQuery, 
							N'@TotalCountOut int OUTPUT', 
							@TotalCountOut = @TotalCount OUTPUT
	EXECUTE sp_executesql @ListQuery, N'@Skip int, @Take int', @Skip = @Skip, @Take = @Take
	print @TotalCount

END
GO
PRINT N'Altering [dbo].[usp_SelectQEAdditionalDataList]...';


GO






--usp_SelectQEAdditionalDataList 1968,1001,1, '((( [QeaEffectiveEndDateTime]  between '09/03/2015 18:30:00' and '09/04/2015 18:29:59'))) desc','',1,20
ALTER PROCEDURE [dbo].[usp_SelectQEAdditionalDataList]
@QualificationElementId int,
@AwardingOrganisationCentreId int,
@TotalCount int = 0 OUTPUT,
@OrderBy nvarchar(255) = '[QeaEffectiveStartDateTime] desc',
@GridWhereClause nvarchar(max) = null,
@PageNumber int = 1,
@PageSize int = 20,
@seriesLabel nvarchar(50)
AS
BEGIN

SET NOCOUNT ON;



SET @TotalCount = 0;
Declare @Skip int = (@PageNumber * @PageSize) - (@PageSize-1),
@Take int = (@PageNumber * @PageSize),
@WhereClause nvarchar(max) = '[AwardingOrganisationCentreId] = ' + cast(@AwardingOrganisationCentreId as nvarchar(10)) +
								' and [QualificationElementId] = ' + cast(@QualificationElementId as nvarchar(10))  +
								' and Record_Delete_Flag=0'+
							case when @GridWhereClause is null or len(ltrim(rtrim(@GridWhereClause))) <= 0 then ''
							else ' and ' + @GridWhereClause end


if @seriesLabel is not null and len(ltrim(rtrim(@seriesLabel))) > 0 
begin
		set @WhereClause = @WhereClause + ' and SeriesLabel = ''' + @seriesLabel + ''''
end

SET @TotalCount = 0;
	declare @CountQuery as nvarchar(max) = N'Select @TotalCountOut = Count(1) from
	(Select AwardingOrganisationCentreId,QualificationElementId,Record_Delete_Flag,
		QEA_Effective_Start_Date_Time as QeaEffectiveStartDateTime,QEA_Effective_End_Date_Time as QeaEffectiveEndDateTime,
		Series_Label as SeriesLabel
		from QEAvailability qea) p
		 Where ' + @WhereClause
	 
	 print @CountQuery

	 Declare @ListQuery as nvarchar(max)
	

	Set @ListQuery=
	'Select QEAvailabilityId, AwardingOrganisationCentreId,
				QualificationElementId,
				QeaEffectiveStartDateTime,QeaEffectiveEndDateTime,
				SeriesLabel,RN
	from (Select QEAvailabilityId, AwardingOrganisationCentreId,
				QualificationElementId,
				Record_Delete_Flag,
				QeaEffectiveStartDateTime,QeaEffectiveEndDateTime,
				SeriesLabel,ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') AS RN
	from 
		(Select 
				QEAvailabilityId, AwardingOrganisationCentreId,
				QualificationElementId,
				Record_Delete_Flag,
				QEA_Effective_Start_Date_Time as QeaEffectiveStartDateTime,QEA_Effective_End_Date_Time as QeaEffectiveEndDateTime,
				Series_Label as SeriesLabel
				from QEAvailability qea
		) p
		Where ' + @WhereClause
	 + ') p2 where p2.[RN] BETWEEN @Skip AND @Take'

	
	EXECUTE sp_executesql	@CountQuery, 
							N'@TotalCountOut int OUTPUT', 
							@TotalCountOut = @TotalCount OUTPUT
	EXECUTE sp_executesql @ListQuery, N'@Skip int, @Take int', @Skip = @Skip, @Take = @Take

END
GO
PRINT N'Creating [dbo].[usp_SelectEnvelopeByTransactionRequestId]...';


GO
---usp_SelectEnvelopeByTransactionRequestId 1000,1001,1270
CREATE Procedure usp_SelectEnvelopeByTransactionRequestId
(
@SchoolId int,
@AwardingOrganisationCentreId int,
@A2CTransactionRequestId int
)
as
begin
select envelope from A2CTransactionRequests where 
SchoolId=@SchoolId and A2CTransactionRequestId  = @A2CTransactionRequestId
and AwardingOrganisationCentreId=@AwardingOrganisationCentreId
end
GO
PRINT N'Creating [dbo].[usp_SelectQEMaximumMarksList]...';


GO
CREATE PROCEDURE [dbo].[usp_SelectQEMaximumMarksList]
	@QualificationElementId int,
	@AwardingOrganisationCentreId int,	
	@AvailabilityId int,
	@OrderBy nvarchar(255) = '[QEOutcomeValueType] asc',
	@GridWhereClause nvarchar(max) = null,
	@PageNumber int = 1,
	@PageSize int = 20,	
	@TotalCount int = 0 OUTPUT
AS
BEGIN

	SET NOCOUNT ON;

	SET @TotalCount = 0;

	Declare 
	@Skip int = (@PageNumber * @PageSize) - (@PageSize-1),

	@Take int = (@PageNumber * @PageSize),

	@WhereClause nvarchar(max) = '[AwardingOrganisationCentreId] = ' + cast(@AwardingOrganisationCentreId as nvarchar(10)) +
									' and [QualificationElementId] = ' + cast(@QualificationElementId as nvarchar(10))  +
									' and [QEAvailabilityId] = ' + cast(@AvailabilityId as nvarchar(10))  +
									' and RecordDeleteFlag = 0' +
								case when @GridWhereClause is null or len(ltrim(rtrim(@GridWhereClause))) <= 0 then ''
								else ' and ' + @GridWhereClause end
	
	declare @CountQuery as nvarchar(max) = 
		N'Select 
			@TotalCountOut = Count(1) from
				(select
					m.AwardingOrganisationCentreId,
					m.QualificationElementId,
					e.QEAvailabilityId,	
					m.[QE_Outcome_Value_Type] as QEOutcomeValueType,
					m.[QE_Availability_Maximum_Mark] as QEAvailabilityMaximumMark,
					m.Record_Delete_Flag as RecordDeleteFlag 
				from  
					QEAvailability e inner join [QEAvailabilityMaximumMark] m on 
					(e.AwardingOrganisationCentreId = m.AwardingOrganisationCentreId and
					e.QualificationElementId = m.QualificationElementId and
					e.QEA_Effective_Start_Date_Time = m.QEA_Effective_Start_Date_Time)) p
				 Where ' + @WhereClause
	
	 Declare @ListQuery as nvarchar(max)	

	Set @ListQuery=
	'Select 
		QEOutcomeValueType, QEAvailabilityMaximumMark
	 from 
		(Select 
			AwardingOrganisationCentreId,
			QualificationElementId,
			QEAvailabilityId,	
			QEOutcomeValueType,
			QEAvailabilityMaximumMark,
			RecordDeleteFlag,
			ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') AS RN
		from 
			(Select 
				AwardingOrganisationCentreId,
				QualificationElementId,
				QEAvailabilityId,	
				QEOutcomeValueType,
				QEAvailabilityMaximumMark,
				RecordDeleteFlag
			from
				(select
					m.AwardingOrganisationCentreId,
					m.QualificationElementId,
					e.QEAvailabilityId,
					m.[QE_Outcome_Value_Type] as QEOutcomeValueType,
					m.[QE_Availability_Maximum_Mark] as QEAvailabilityMaximumMark,
					m.Record_Delete_Flag as RecordDeleteFlag 
				from  
					QEAvailability e inner join [QEAvailabilityMaximumMark] m on 
					(e.AwardingOrganisationCentreId = m.AwardingOrganisationCentreId and
					e.QualificationElementId = m.QualificationElementId and
					e.QEA_Effective_Start_Date_Time = m.QEA_Effective_Start_Date_Time)
			) p Where ' + @WhereClause
		+ ') p1) p2 where p2.[RN] BETWEEN @Skip AND @Take'
	
	EXECUTE sp_executesql	@CountQuery, 
							N'@TotalCountOut int OUTPUT', 
							@TotalCountOut = @TotalCount OUTPUT

	EXECUTE sp_executesql @ListQuery, N'@Skip int, @Take int', @Skip = @Skip, @Take = @Take
	
END
GO
PRINT N'Altering [Version]...';


GO
EXECUTE sp_updateextendedproperty @name = N'Version', @value = N'15.1.9.1';


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

GO

GO
PRINT N'Update complete.';


GO
